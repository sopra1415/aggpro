/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.InputPanes;

import Controller.Actions.ActionEditEvent;
import Controller.Actions.ActionNewEvent;
import View.MainFrame.MainFrame;
import java.awt.BorderLayout;
import java.text.ParseException;
import java.util.Properties;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author Heiko Geppert
 */
public class ManipulateEvent extends javax.swing.JFrame {

    
    public static enum state{ 
        addEvent, modifyEvent
    }
    private final MainFrame main;
    private state state;
    
    /**
     * Creates new form manipulateEvent
     * @param main the parent JFrame, used to have a modal Frame here
     * @param s specifys which sort of manipualtion is about to be done
     *  eighter creating a new Event, or editing the existing
     */
    public ManipulateEvent(MainFrame main, state s) throws ParseException{
        super();
        this.main = main;
        this.state = s;
        //panelStartDate.add(startDatePicker);
        //panelEndDate.add(endDatePicker);
        initComponents();
        initOwnComponents();
        
        if (s==state.addEvent){
            this.setTitle("Neues Event");
            this.btnOK.setAction(new ActionNewEvent(this));
        }else if (s==state.modifyEvent){
            this.setTitle("Event bearbeiten");
            this.btnOK.setAction(new ActionEditEvent(this));
            lbEventName.setText("neuer Eventname");
            //TODO Daten des bisherigen Events holen und in die Textfelder schreiben
        }
        btnOK.setText("OK");
        lookAndFeel();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editort.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil2 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil3 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil4 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil5 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil6 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil7 = new org.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil8 = new org.jdatepicker.util.JDatePickerUtil();
        lbEventName = new javax.swing.JLabel();
        lbTimeStart = new javax.swing.JLabel();
        lbTimeStart1 = new javax.swing.JLabel();
        tfEventName = new javax.swing.JTextField();
        panelStartDate = new javax.swing.JPanel();
        tFStartDateDay = new javax.swing.JFormattedTextField();
        tFStartDateMonth = new javax.swing.JFormattedTextField();
        tFStartDateYear = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelTimeOfDay = new javax.swing.JPanel();
        cbTimeOfDay = new javax.swing.JCheckBox();
        lbStart = new javax.swing.JLabel();
        lbEnd = new javax.swing.JLabel();
        tfStartDateHour = new javax.swing.JFormattedTextField();
        tfStartDateMinute = new javax.swing.JFormattedTextField();
        tfEndDateHour = new javax.swing.JFormattedTextField();
        tfEndDateMinute = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        panelEndDate = new javax.swing.JPanel();
        tFEndDateDay = new javax.swing.JFormattedTextField();
        tFEndDateMonth = new javax.swing.JFormattedTextField();
        tfEndDateYear = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbEventName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbEventName.setText("Event Name:");

        lbTimeStart.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbTimeStart.setText("Start Datum");

        lbTimeStart1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbTimeStart1.setText("End Datum");

        panelStartDate.setMinimumSize(new java.awt.Dimension(178, 127));
        panelStartDate.setPreferredSize(new java.awt.Dimension(178, 127));

        tFStartDateDay.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tFStartDateDay.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        tFStartDateMonth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tFStartDateMonth.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        tFStartDateYear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tFStartDateYear.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jLabel1.setText("Tag");

        jLabel2.setText("Monat");

        jLabel3.setText("Jahr");

        javax.swing.GroupLayout panelStartDateLayout = new javax.swing.GroupLayout(panelStartDate);
        panelStartDate.setLayout(panelStartDateLayout);
        panelStartDateLayout.setHorizontalGroup(
            panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStartDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelStartDateLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFStartDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelStartDateLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFStartDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelStartDateLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFStartDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        panelStartDateLayout.setVerticalGroup(
            panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStartDateLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFStartDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFStartDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelStartDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFStartDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbTimeOfDay.setSelected(true);
        cbTimeOfDay.setText("Uhrzeit manuell angeben");
        cbTimeOfDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTimeOfDayActionPerformed(evt);
            }
        });

        lbStart.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbStart.setText("Beginn:");

        lbEnd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbEnd.setText("Ende:");

        jLabel7.setText(":");

        jLabel8.setText(":");

        javax.swing.GroupLayout panelTimeOfDayLayout = new javax.swing.GroupLayout(panelTimeOfDay);
        panelTimeOfDay.setLayout(panelTimeOfDayLayout);
        panelTimeOfDayLayout.setHorizontalGroup(
            panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeOfDayLayout.createSequentialGroup()
                .addGroup(panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelTimeOfDayLayout.createSequentialGroup()
                        .addComponent(lbEnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfEndDateHour, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelTimeOfDayLayout.createSequentialGroup()
                        .addComponent(lbStart)
                        .addGap(32, 32, 32)
                        .addComponent(tfStartDateHour, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfStartDateMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEndDateMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTimeOfDayLayout.createSequentialGroup()
                .addComponent(cbTimeOfDay)
                .addGap(0, 35, Short.MAX_VALUE))
        );
        panelTimeOfDayLayout.setVerticalGroup(
            panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimeOfDayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbTimeOfDay)
                .addGap(18, 18, 18)
                .addGroup(panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStart)
                    .addComponent(tfStartDateHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfStartDateMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(panelTimeOfDayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEnd)
                    .addComponent(tfEndDateHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEndDateMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        btnOK.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnOK.setText("OK");

        btnCancel.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnCancel.setText("abbrechen");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        panelEndDate.setMinimumSize(new java.awt.Dimension(178, 127));

        tFEndDateDay.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tFEndDateDay.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        tFEndDateMonth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tFEndDateMonth.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        tfEndDateYear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tfEndDateYear.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        jLabel4.setText("Tag");

        jLabel5.setText("Monat");

        jLabel6.setText("Jahr");

        javax.swing.GroupLayout panelEndDateLayout = new javax.swing.GroupLayout(panelEndDate);
        panelEndDate.setLayout(panelEndDateLayout);
        panelEndDateLayout.setHorizontalGroup(
            panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEndDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelEndDateLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfEndDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEndDateLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFEndDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelEndDateLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tFEndDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        panelEndDateLayout.setVerticalGroup(
            panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEndDateLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFEndDateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFEndDateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEndDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEndDateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbEventName)
                        .addGap(101, 101, 101)
                        .addComponent(tfEventName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(panelTimeOfDay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbTimeStart, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelStartDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTimeStart1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEventName)
                    .addComponent(tfEventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTimeStart)
                    .addComponent(lbTimeStart1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(panelEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelTimeOfDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void initOwnComponents() {
        // Definition der Datepickers
      org.jdatepicker.impl.UtilDateModel model = new UtilDateModel();

        java.util.Properties prop = new Properties();
        
        //StartDatePicker
        startDatePanel = new JDatePanelImpl(model, prop);
        startDatePicker = new JDatePickerImpl(startDatePanel, new JFormattedTextField.AbstractFormatter() {

            @Override
            public Object stringToValue(String string) throws ParseException {
                return null;
            }

            @Override
            public String valueToString(Object o) throws ParseException {
                return null;
            }
        });
        // EndDate Picker
        endDatePanel = new JDatePanelImpl(model,prop);
        endDatePicker = new JDatePickerImpl(endDatePanel, new JFormattedTextField.AbstractFormatter() {

            @Override
            public Object stringToValue(String string) throws ParseException {
                return null;
            }

            @Override
            public String valueToString(Object o) throws ParseException {
                return null;
            }
        });
    
        
        startDatePanel.add(startDatePicker);
        endDatePanel.add(endDatePicker);
        
        System.out.println("Test1");
      
      
        startDatePanel.setLayout(new BorderLayout());
        startDatePanel.add(startDatePicker, BorderLayout.CENTER);
        endDatePanel.add(endDatePicker);        
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.close();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void cbTimeOfDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTimeOfDayActionPerformed
       if (!cbTimeOfDay.isSelected()){
           tfStartDateHour.setEnabled(false);
           tfStartDateMinute.setEnabled(false);
           tfEndDateHour.setEnabled(false);
           tfEndDateMinute.setEnabled(false);
       } else {
           tfStartDateHour.setEnabled(true);
           tfStartDateMinute.setEnabled(true);
           tfEndDateHour.setEnabled(true);
           tfEndDateMinute.setEnabled(true);
       }
    }//GEN-LAST:event_cbTimeOfDayActionPerformed

    public JFormattedTextField gettFEndDateDay() {
        return tFEndDateDay;
    }

    public JFormattedTextField gettFEndDateMonth() {
        return tFEndDateMonth;
    }

    public JFormattedTextField gettFStartDateDay() {
        return tFStartDateDay;
    }

    public JFormattedTextField gettFStartDateMonth() {
        return tFStartDateMonth;
    }

    public JFormattedTextField gettFStartDateYear() {
        return tFStartDateYear;
    }

    public JFormattedTextField getTfEndDateYear() {
        return tfEndDateYear;
    }

    public JTextField getTfEventName() {
        return tfEventName;
    }

    public JFormattedTextField getTfEndDateHour() {
        return tfEndDateHour;
    }

    public JFormattedTextField getTfEndDateMinute() {
        return tfEndDateMinute;
    }

    public JFormattedTextField getTfStartDateHour() {
        return tfStartDateHour;
    }

    public JFormattedTextField getTfStartDateMinute() {
        return tfStartDateMinute;
    }






    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox cbTimeOfDay;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil2;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil3;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil4;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil5;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil6;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil7;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lbEnd;
    private javax.swing.JLabel lbEventName;
    private javax.swing.JLabel lbStart;
    private javax.swing.JLabel lbTimeStart;
    private javax.swing.JLabel lbTimeStart1;
    private javax.swing.JPanel panelEndDate;
    private javax.swing.JPanel panelStartDate;
    private javax.swing.JPanel panelTimeOfDay;
    private javax.swing.JFormattedTextField tFEndDateDay;
    private javax.swing.JFormattedTextField tFEndDateMonth;
    private javax.swing.JFormattedTextField tFStartDateDay;
    private javax.swing.JFormattedTextField tFStartDateMonth;
    private javax.swing.JFormattedTextField tFStartDateYear;
    private javax.swing.JFormattedTextField tfEndDateHour;
    private javax.swing.JFormattedTextField tfEndDateMinute;
    private javax.swing.JFormattedTextField tfEndDateYear;
    private javax.swing.JTextField tfEventName;
    private javax.swing.JFormattedTextField tfStartDateHour;
    private javax.swing.JFormattedTextField tfStartDateMinute;
    // End of variables declaration//GEN-END:variables
    
    org.jdatepicker.impl.JDatePanelImpl startDatePanel;
    org.jdatepicker.impl.JDatePickerImpl startDatePicker;
    org.jdatepicker.impl.JDatePanelImpl endDatePanel;
    org.jdatepicker.impl.JDatePickerImpl endDatePicker;

    
    public boolean checkInputs() {
        if (cbTimeOfDay.isSelected()){
            if (tfStartDateHour.getText().equals("")) return false;
            if (tfEndDateHour.getText().equals("")) return  false;
            if (tfStartDateMinute.getText().equals("")) return false;
            if (tfEndDateMinute.getText().equals("")) return  false;
        }
        if (tfEventName.getText().equals("")) return false;
        return true;
    }
    
    public void close(){
        main.setEnabled(true);
        dispose();
    }
    
    public state getPurpose(){
        return this.state;
    }

    private void lookAndFeel() {
                /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManipulateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }
}
